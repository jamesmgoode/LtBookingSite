@page "/CharacterDetails"
@attribute [Authorize]

@using LtBookingSite.Models.ViewModels
@using LtBookingSite.Data
@inject AuthenticationStateProvider authenticationStateProvider
@inject ICharacterDetailsHelper characterDetailsHelper

<h1>Character Details</h1>

<EditForm Model="@CharacterDetailsViewModel" OnValidSubmit="@HandleValidSubmit" class="character-details-form">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group row">
        <label for="CharacterName" class="col-md-2">Character Name</label>
        <InputText id="CharacterName" @bind-Value="CharacterDetailsViewModel.CharacterName" class="form-control col-md-4">@CharacterDetailsViewModel.CharacterName</InputText>
    </div>
    <!--Add basic fields-->
    <!--Add CSs-->
    <!--Add OSPs-->
    <!--Add lammies/special creature-->
</EditForm>

@code {
    private CharacterDetailsViewModel CharacterDetailsViewModel { get; set; }

    private string SubmitMessageVisibility { get; set; } = "hide-submit-message";

    protected override Task OnInitializedAsync()
    {
        var user = authenticationStateProvider.GetAuthenticationStateAsync().Result.User;
        var email = user.Identity.Name;

        CharacterDetailsViewModel = characterDetailsHelper.GetCharacterDetailsViewModel(email);

        return base.OnInitializedAsync();
    }

    private void HandleValidSubmit()
    {
        var user = authenticationStateProvider.GetAuthenticationStateAsync().Result.User;
        var email = user.Identity.Name;

        characterDetailsHelper.SaveCharacterDetails(email, CharacterDetailsViewModel);

        SubmitMessageVisibility = "show-submit-message";
    }
}
