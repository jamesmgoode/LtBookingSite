@page "/PlayerDetails"
@attribute [Authorize]

@using LtBookingSite.Models.ViewModels
@using LtBookingSite.Data
@inject AuthenticationStateProvider authenticationStateProvider
@inject IPlayerDetailsHelper playerDetailsHelper

<h1>Player Details</h1>

<EditForm Model=@PlayerDetailsViewModel OnValidSubmit="@HandleValidSubmit" class="player-details-form">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group row">
        <label for="FirstName" class="col-md-2">First Name</label>
        <InputText id="FirstName" @bind-Value="PlayerDetailsViewModel.FirstName" class="form-control col-md-4">@PlayerDetailsViewModel.FirstName</InputText>
    </div>
    <div class="form-group row">
        <label for="LastName" class="col-md-2">Last Name</label>
        <InputText id="LastName" @bind-Value="PlayerDetailsViewModel.LastName" class="form-control col-md-4">@PlayerDetailsViewModel.LastName</InputText>
    </div>
    <div class="form-group row">
        <label for="PlayerId" class="col-md-2">Player ID</label>
        <InputNumber id="PlayerId" @bind-Value="PlayerDetailsViewModel.PlayerId" class="form-control col-md-4">@PlayerDetailsViewModel.PlayerId</InputNumber>
    </div>
    <div class="form-group row">
        <label for="DateOfBirth" class="col-md-2">Date of Birth</label>
        <InputDate id="DateOfBirth" @bind-Value="PlayerDetailsViewModel.DateOfBirth" class="form-control col-md-4">@PlayerDetailsViewModel.DateOfBirth</InputDate>
    </div>
    <div class="form-group row">
        <label for="EmergencyContactName" class="col-md-2">Emergency Contact Name</label>
        <InputText id="EmergencyContactName" @bind-Value="PlayerDetailsViewModel.EmergencyContactName" class="form-control col-md-4">@PlayerDetailsViewModel.EmergencyContactName</InputText>
    </div>
    <div class="form-group row">
        <label for="EmergencyContactPhoneNumber" class="col-md-2">Emergency Contact Phone Number</label>
        <InputText id="EmergencyContactPhoneNumber" @bind-Value="PlayerDetailsViewModel.EmergencyContactPhoneNumber" class="form-control col-md-4">@PlayerDetailsViewModel.EmergencyContactPhoneNumber</InputText>
    </div>
    <div class="form-group row">
        <label for="Notes" class="col-md-2">Notes</label>
        <InputText id="Notes" @bind-Value="PlayerDetailsViewModel.Notes" class="form-control col-md-4">@PlayerDetailsViewModel.Notes</InputText>
    </div>

    <button type="submit" class="btn btn-outline-primary">Submit</button>
    <div class="submit-message">
        <p class="@SubmitMessageVisibility">Your details have been updated.</p>
    </div>
</EditForm>

@code {
    private PlayerDetailsViewModel PlayerDetailsViewModel { get; set; }

    private string SubmitMessageVisibility { get; set; } = "hide-submit-message";

    protected override Task OnInitializedAsync()
    {
        var user = authenticationStateProvider.GetAuthenticationStateAsync().Result.User;
        var email = user.Identity.Name;

        PlayerDetailsViewModel = playerDetailsHelper.GetPlayerDetailsViewModel(email);

        return base.OnInitializedAsync();
    }

    private void HandleValidSubmit()
    {
        var user = authenticationStateProvider.GetAuthenticationStateAsync().Result.User;
        var email = user.Identity.Name;

        playerDetailsHelper.SavePlayerDetails(email, PlayerDetailsViewModel);

        SubmitMessageVisibility = "show-submit-message";
    }
}
